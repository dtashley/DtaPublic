%!PS-Adobe-3.0 EPSF-3.0
%%Title: c:\pubsdta\hyreachm\s_iop0\leqeq01.eps
%%Creator: Micrografx Graphics Engine
%%CreationDate: Thu Nov 01 01:25:00 2001
%%BoundingBox: 90 0 348 164 
%%Pages: (atend)
%%LanguageLevel: 1
%%CMYKCustomColor: (atend)
%%DocumentCustomColors: (atend)
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset RangerDict 1 1
/RangerDict 150 dict def RangerDict begin /bd{bind def}bind def /ld{load def}bd 
/p/closepath ld /cc/concat ld /v/curveto ld /gr/grestore ld /gs/gsave ld 
/l/lineto ld /m/moveto ld /n/newpath ld /r/rlineto ld /sc/scale ld /sd/setdash 
ld /g/setgray ld /lc/setlinecap ld /lj/setlinejoin ld /lw/setlinewidth ld 
/c/setrgbcolor ld /sp/showpage ld /s/stroke ld /tf/transform ld /tr/translate 
ld /xd{exch def}bd /MGX_Overprint false def /min{2 copy gt{exch} if pop}bd 
/arct where {pop} {/arct{arcto pop pop pop pop}bd} ifelse /make_ro_array { 
/packedarray where { pop packedarray }{array astore readonly } ifelse } bd 
/findcmykcustomcolor where { pop }{ /findcmykcustomcolor { 5 make_ro_array } 
def } ifelse /setcustomcolor where { pop } { /setcustomcolor { exch aload pop 
pop 4 { 4 index mul 4 1 roll } repeat 5 -1 roll pop setcmykcolor } def } ifelse 
/setcmykcolor where {pop /k/setcmykcolor ld} {/k{4 1 roll 3 {3 index add 1 min 
1 exch sub 3 1 roll} repeat c pop}bd} ifelse /x {/tint xd findcmykcustomcolor 
MGX_Overprint setoverprint tint 1 exch sub setcustomcolor} def /setoverprint 
where {pop}{/setoverprint {/MGX_Overprint xd} def} ifelse /currentoverprint 
where {pop}{/currentoverprint{MGX_Overprint}def} ifelse /op{setoverprint}def 
/_mx matrix def /smx{/_mx _mx currentmatrix def}bd /rmx{_mx setmatrix}bd /_ctm 
matrix def /sctm{/_ctm _ctm currentmatrix def /_res 72 72 matrix defaultmatrix 
dtransform _ctm idtransform pop abs def}bd /rctm{_ctm setmatrix}bd /el{smx tr 
sc 1 eq {0 -1 m} if 0 0 1 -90 270 arc rmx}bd /ea{smx tr sc 1 eq {arcn} {arc} 
ifelse 1 eq {0 0 l} if rmx}bd /rt{1 eq {m} {l} ifelse 2 copy 0 r 0 exch r neg 0 
r neg 0 exch r}bd /rr{smx tr /_wy exch 3 index div def /_wx exch 3 index div 
def sc _wx 2 div 0 3 -1 roll 1 eq {m} {l} ifelse 0 0 0 _wy 0.5 arct 0 _wy _wx 
_wy 0.5 arct _wx _wy _wx 0 0.5 arct _wx 0 0 0 0.5 arct _wx 2 div 0 l rmx}bd 
/clp{/_ct xd {{gs _ct 1 eq {eoclip} {clip} ifelse}stopped {gr currentflat 1 add 
setflat} {exit} ifelse} loop}bd /horz{_y1 _w 2 div add _w _y2 {dup _x1 exch m 
_x2 exch l s} for}bd /vert{_x1 _w 2 div add _w _x2 {dup _y1 m _y2 l s} for}bd 
/fdiag{_x1 _w _x2 _y2 _y1 sub add{_y2 m _y2 _y1 sub neg dup r s} for}bd 
/bdiag{_x1 _y2 _y1 sub sub _w _x2{_y2 m _y2 _y1 sub dup neg r s} for}bd 
/hf{/_ht xd clp rctm /_w _res 12 div def pathbbox _w div cvi 1 add _w mul /_y2 
xd _w div cvi 1 add _w mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w mul 
/_x1 xd 1 lw [] 0 sd n _ht 0 eq {horz} if _ht 1 eq {vert} if _ht 2 eq {fdiag} 
if _ht 3 eq {bdiag} if _ht 4 eq {horz vert} if _ht 5 eq {fdiag bdiag} if gr}bd 
/bf{/_im xd clp rctm /_w _res 12 div round def pathbbox _w div cvi 1 add _w mul 
/_y2 xd _w div cvi 1 add _w mul /_x2 xd _w div cvi _w mul /_y1 xd _w div cvi _w 
mul /_x1 xd /_wx _x2 _x1 sub def /_wy _y2 _y1 sub def /_swx _wx _w div cvi 8 
mul def /_swy _wy _w div cvi 8 mul def /_ic 0 def _x1 _y1 tr _wx _wy sc _swx 
_swy false [_swx 0 0 _swy 0 0] /_swx _swx 8 div def {_im _ic _swx div cvi 8 mod 
1 getinterval /_ic _ic 1 add def} imagemask gr}bd /readimg{currentfile _imgstr 
readstring pop}bd /readimgx{currentfile _imgstr readhexstring pop}bd /i{gs tr 
sc /_imgstr exch string def [4 index 0 0 6 index 0 0] exch 1 eq {{readimg}} 
{{readimgx}} ifelse image gr}bd /im{gs tr sc /_imgstr exch string def 1 eq 
{true} {false} ifelse [3 index 0 0 5 index 0 0] {readimgx} imagemask gr}bd 
userdict /RangerImage 40 dict dup begin put /_image systemdict /image get def 
/_setgray systemdict /setgray get def /_currentgray systemdict /currentgray get 
def /_settransfer systemdict /settransfer get def /_currenttransfer systemdict 
/currenttransfer get def /clr? /deviceinfo where {pop deviceinfo /Colors known 
{deviceinfo /Colors get exec 1 gt}{false}ifelse }{ /statusdict where { pop 
statusdict /processcolors known { statusdict /processcolors get exec 1 gt }{ 
false }ifelse }{ false }ifelse }ifelse def /blank 0 _currenttransfer exec 1 
_currenttransfer exec eq def /negative blank{ 0 _currenttransfer exec 0.5 lt }{ 
0 _currenttransfer exec 1 _currenttransfer exec gt }ifelse def /inverted? 
negative def /l2? /languagelevel where{pop languagelevel 2 ge}{false} ifelse 
def /4= { 4 index eq 8 1 roll 4 index eq 8 1 roll 4 index eq 8 1 roll 4 index 
eq 8 1 roll pop pop pop pop and and and }def clr? {/band 0 def}{/band 5 
def}ifelse /setcmykcolor where { pop 1 0 0 0 setcmykcolor _currentgray 1 exch 
sub 0 1 0 0 setcmykcolor _currentgray 1 exch sub 0 0 1 0 setcmykcolor 
_currentgray 1 exch sub 0 0 0 1 setcmykcolor _currentgray 1 exch sub 4 {4 copy} 
repeat 1 0 0 0 4= {/band 1 store} if 0 1 0 0 4= {/band 2 store} if 0 0 1 0 4= 
{/band 3 store} if 0 0 0 1 4= {/band 4 store} if 0 0 0 0 4= {/band 6 store} if 
} if blank {/band 6 store} if l2? {band 0 eq {/DeviceCMYK}{/DeviceGray} ifelse 
setcolorspace } if /readdata {currentfile exch readhexstring pop} def /sepimage 
l2? { /image ld }{ { begin Width Height BitsPerComponent ImageMatrix Decode 
length 2 eq {/DataSource load image} if Decode length 6 eq {DataSource 0 get 
DataSource 1 get DataSource 2 get true 3 colorimage }if Decode length 8 eq { 
DataSource 0 get DataSource 1 get DataSource 2 get DataSource 3 get true 4 
colorimage }if end }def }ifelse /_image2 l2? { /_image ld }{ { begin Width 
Height BitsPerComponent ImageMatrix /DataSource load _image end } def }ifelse 
/doimage { band 0 eq band 5 eq or { sepimage } if band 1 ge band 4 le and { {1 
exch sub dummy exec} dup 3 _currenttransfer put _settransfer _image2 } if band 
6 eq { negative {{pop 0}}{{pop 1} }ifelse _settransfer _image2 }if } def /ic { 
gsave translate scale /scanlen xd /ncomp xd /IsBin xd /bpcomp xd /rows xd /cols 
xd /picstr1 cols string def /picstr2 cols string def /picstr3 cols string def 
/picstr4 cols string def /picstr5 cols string def 12 dict begin /ImageType 1 
def /Width cols def /Height rows def /ImageMatrix [cols 0 0 rows 0 0] def 
/BitsPerComponent bpcomp def band 0 eq { /Decode [0 1 0 1 0 1 0 1] def } { 
/Decode [0 1] def } ifelse band 0 eq { /MultipleDataSources true def 
/DataSource [ { picstr1 readdata } { picstr2 readdata } { picstr3 readdata } { 
picstr4 readdata picstr5 readdata pop } ] def } if band 1 eq { /DataSource { 
picstr1 readdata picstr2 readdata pop picstr3 readdata pop picstr4 readdata pop 
picstr5 readdata pop } def } if band 2 eq { /DataSource { picstr1 readdata pop 
picstr2 readdata picstr3 readdata pop picstr4 readdata pop picstr5 readdata pop 
} def } if band 3 eq { /DataSource { picstr1 readdata pop picstr2 readdata pop 
picstr3 readdata picstr4 readdata pop picstr5 readdata pop } def } if band 4 eq 
{ /DataSource { picstr1 readdata pop picstr2 readdata pop picstr3 readdata pop 
picstr4 readdata picstr5 readdata pop } def } if band 5 ge { /DataSource { 
picstr1 readdata pop picstr2 readdata pop picstr3 readdata pop picstr4 readdata 
pop picstr5 readdata } def } if currentdict end doimage grestore } def 
currentdict readonly pop end /bullets{{/bullet}repeat} bd 
/WE[/grave/acute/circumflex/tilde/macron 
/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi 18 
bullets StandardEncoding 32 95 getinterval aload pop 3 bullets 
/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex 
/perthousand/Scaron/guilsinglleft/OE 4 bullets/quoteleft/quoteright 
/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron 
/guilsinglright/oe 2 bullets /Ydieresis/space/exclamdown/cent/sterling 
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine 
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus 
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla 
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters 
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla 
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis 
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash 
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute 
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex 
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute 
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex 
/udieresis/yacute/thorn/ydieresis]def WE dup 39/quotesingle put 96/grave put 
/selectfont where {pop} {/selectfont {exch findfont exch dup type /arraytype eq 
{makefont} {scalefont} ifelse setfont}bd} ifelse /_mxe matrix def /_mxf matrix 
def /we {/_fn xd FontDirectory _fn known {pop} {findfont dup maxlength dict 
/_fd xd {exch dup /FID ne {exch _fd 3 1 roll put} {pop pop} ifelse} forall _fd 
dup /FontName _fn put /Encoding WE put _fn _fd definefont pop} ifelse _fn} bd 
/fnt {/_ys xd /_xs xd /_asc xd /_itl exch dup 0 ne {10.0 div sin} if def [1 0 
_itl 1 0 0] [_xs 0 0 _ys neg 0 _asc] _mxf concatmatrix selectfont currentfont 
dup dup /FontInfo known {/FontInfo get} if /UnderlinePosition known not {pop 
/Courier findfont} if /FontInfo get /UnderlinePosition get 1000 div 0 exch _mxf 
tf /_ulpos xd pop 0 .3 _mxf tf /_sopos xd pop currentfont dup dup /FontInfo 
known {/FontInfo get} if /UnderlineThickness known not {pop /Courier findfont} 
if /FontInfo get /UnderlineThickness get 1000 div _ys mul /_ulsiz xd } bd /to 
{m show n} bd /tp {m false charpath} bd /ul {1 eq {/_pos _ulpos def} {/_pos 
_sopos def} ifelse 1 eq {gs [] 0 sd 0 lc _ulsiz lw _pos add m 0 r s gr} {_pos 
add _ulsiz 2 div add m 0 _ulsiz neg r 0 r 0 _ulsiz r p} ifelse} bd end 
%%EndResource
%%EndProlog
%%BeginSetup
RangerImage begin RangerDict begin userdict begin 0 327 tr 0.036 -0.036 sc sctm 
%%EndSetup
%%Page: 1 1 
%%PageResources: (atend)
%%BeginPageSetup
%%EndPageSetup
0 878 823 5920 5374 el gs 0.000 0.000 0.000 0.000 k eofill gr 529 lw 0 lj 0 lc 
0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 0.078740 0.000 0.000 ] cc 
s rctm 5893 5338 m 5934 5378 5976 5418 6018 5458 v 6026 5458 6031 5459 6033 
5459 v 6035 5460 6037 5461 6039 5464 v 6041 5466 6041 5469 6041 5471 v 6041 
5476 6040 5479 6037 5481 v 6034 5484 6029 5486 6023 5486 v 5994 5486 5965 5486 
5935 5486 v 5928 5486 5923 5484 5920 5481 v 5917 5479 5916 5476 5916 5471 v 
5916 5467 5917 5464 5920 5462 v 5923 5459 5928 5458 5935 5458 v 5950 5458 5965 
5458 5980 5458 v 5945 5424 5910 5390 5874 5356 v 5839 5390 5804 5424 5769 5458 
v 5783 5458 5798 5458 5813 5458 v 5820 5458 5825 5459 5827 5462 v 5830 5464 
5831 5467 5831 5471 v 5831 5476 5830 5479 5827 5481 v 5824 5484 5819 5486 5813 
5486 v 5784 5486 5754 5486 5724 5486 v 5718 5486 5713 5484 5710 5481 v 5707 
5479 5706 5476 5706 5471 v 5706 5469 5707 5466 5709 5464 v 5710 5461 5712 5460 
5714 5459 v 5716 5459 5721 5458 5730 5458 v 5771 5418 5813 5378 5855 5337 v 
5818 5302 5781 5267 5744 5231 v 5736 5231 5731 5230 5729 5229 v 5727 5229 5725 
5227 5723 5225 v 5721 5222 5721 5219 5721 5217 v 5721 5213 5722 5210 5725 5207 
v 5728 5205 5733 5203 5739 5203 v 5764 5203 5789 5203 5814 5203 v 5821 5203 
5825 5205 5828 5207 v 5831 5210 5832 5213 5832 5217 v 5832 5221 5831 5224 5828 
5227 v 5825 5229 5821 5231 5814 5231 v 5803 5231 5792 5231 5781 5231 v 5811 
5260 5842 5289 5873 5319 v 5903 5290 5934 5261 5965 5231 v 5955 5231 5944 5231 
5933 5231 v 5927 5231 5923 5229 5919 5227 v 5917 5224 5915 5221 5915 5217 v 
5915 5213 5917 5210 5919 5207 v 5923 5205 5927 5203 5934 5203 v 5959 5203 5984 
5203 6009 5203 v 6015 5203 6019 5205 6023 5207 v 6025 5210 6027 5213 6027 5217 
v 6027 5220 6026 5222 6024 5225 v 6023 5227 6021 5229 6019 5229 v 6017 5230 
6011 5231 6004 5231 v 5967 5266 5930 5302 5893 5338 v p 0.000 0.000 0.000 1.000 
k eofill 6262 5502 m 6262 5515 6262 5528 6262 5541 v 6262 5576 6254 5603 6238 
5623 v 6225 5639 6209 5647 6190 5647 v 6180 5647 6171 5645 6163 5641 v 6155 
5637 6148 5632 6142 5625 v 6138 5621 6134 5614 6130 5605 v 6126 5596 6122 5587 
6121 5580 v 6118 5569 6116 5556 6116 5541 v 6116 5528 6116 5515 6116 5502 v 
6116 5468 6124 5441 6141 5421 v 6154 5405 6170 5397 6189 5397 v 6199 5397 6207 
5399 6216 5403 v 6224 5407 6231 5412 6237 5419 v 6240 5423 6244 5430 6249 5439 
v 6253 5448 6256 5456 6258 5464 v 6261 5475 6262 5487 6262 5502 v 6262 5502 
6262 5502 6262 5502 v p 6246 5504 m 6246 5489 6244 5475 6240 5462 v 6236 5449 
6231 5439 6226 5431 v 6223 5427 6219 5423 6213 5420 v 6206 5416 6198 5413 6189 
5413 v 6171 5413 6157 5423 6147 5440 v 6137 5459 6132 5480 6132 5504 v 6132 
5516 6132 5528 6132 5540 v 6132 5554 6134 5568 6138 5581 v 6143 5594 6148 5605 
6153 5613 v 6156 5617 6160 5620 6165 5624 v 6172 5628 6180 5630 6190 5630 v 
6207 5630 6221 5621 6231 5603 v 6241 5585 6246 5564 6246 5540 v 6246 5528 6246 
5516 6246 5504 v p 0.000 0.000 0.000 1.000 k eofill 0 878 823 3396 8244 el gs 
0.000 0.000 0.000 0.000 k eofill gr 0.000 0.000 0.000 1.000 k [0.078740 
0.000000 0.000000 0.078740 0.000 0.000 ] cc s rctm 3341 8276 m 3382 8316 3424 
8356 3466 8396 v 3474 8396 3479 8397 3481 8397 v 3483 8398 3485 8400 3487 8402 
v 3489 8404 3489 8407 3489 8410 v 3489 8414 3488 8417 3485 8420 v 3482 8422 
3477 8424 3471 8424 v 3442 8424 3413 8424 3383 8424 v 3376 8424 3371 8422 3368 
8420 v 3365 8417 3364 8414 3364 8410 v 3364 8406 3365 8402 3368 8400 v 3371 
8397 3376 8396 3383 8396 v 3398 8396 3413 8396 3428 8396 v 3393 8362 3358 8328 
3322 8294 v 3287 8328 3252 8362 3217 8396 v 3231 8396 3246 8396 3261 8396 v 
3268 8396 3273 8397 3275 8400 v 3278 8402 3279 8406 3279 8410 v 3279 8414 3278 
8417 3275 8420 v 3272 8422 3267 8424 3261 8424 v 3232 8424 3202 8424 3172 8424 
v 3166 8424 3161 8422 3158 8420 v 3155 8417 3154 8414 3154 8410 v 3154 8407 
3155 8404 3157 8402 v 3158 8400 3160 8398 3162 8397 v 3164 8397 3169 8396 3178 
8396 v 3219 8356 3261 8316 3303 8276 v 3266 8241 3229 8205 3192 8169 v 3184 
8169 3179 8168 3177 8167 v 3175 8167 3173 8165 3171 8163 v 3169 8160 3169 8157 
3169 8155 v 3169 8151 3170 8148 3173 8146 v 3176 8143 3181 8141 3187 8141 v 
3212 8141 3237 8141 3262 8141 v 3269 8141 3273 8143 3276 8146 v 3279 8148 3280 
8151 3280 8156 v 3280 8160 3279 8162 3276 8165 v 3273 8167 3269 8169 3262 8169 
v 3251 8169 3240 8169 3229 8169 v 3259 8198 3290 8227 3321 8257 v 3351 8228 
3382 8199 3413 8169 v 3403 8169 3392 8169 3381 8169 v 3375 8169 3371 8167 3367 
8165 v 3365 8162 3363 8159 3363 8155 v 3363 8151 3365 8148 3367 8146 v 3371 
8143 3375 8141 3382 8141 v 3407 8141 3432 8141 3457 8141 v 3463 8141 3467 8143 
3471 8146 v 3473 8148 3475 8151 3475 8156 v 3475 8158 3474 8160 3472 8163 v 
3471 8165 3469 8167 3467 8167 v 3465 8168 3459 8169 3452 8169 v 3415 8204 3378 
8240 3341 8276 v p 0.000 0.000 0.000 1.000 k eofill 3645 8338 m 3645 8413 3645 
8488 3645 8563 v 3663 8563 3681 8563 3700 8563 v 3704 8563 3707 8564 3708 8565 
v 3710 8567 3710 8569 3710 8571 v 3710 8573 3710 8575 3708 8577 v 3707 8578 
3704 8579 3700 8579 v 3658 8579 3616 8579 3574 8579 v 3570 8579 3568 8578 3566 
8577 v 3565 8575 3564 8573 3564 8571 v 3564 8569 3565 8567 3566 8565 v 3568 
8564 3570 8563 3574 8563 v 3592 8563 3610 8563 3629 8563 v 3629 8496 3629 8428 
3629 8360 v 3612 8365 3595 8370 3577 8376 v 3575 8377 3573 8377 3572 8377 v 
3570 8377 3568 8377 3567 8375 v 3565 8373 3564 8371 3564 8369 v 3564 8367 3565 
8366 3566 8364 v 3567 8363 3569 8362 3572 8361 v 3596 8354 3620 8346 3645 8338 
v p 0.000 0.000 0.000 1.000 k eofill 0 878 823 8761 8230 el gs 0.000 0.000 
0.000 0.000 k eofill gr 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 
0.078740 0.000 0.000 ] cc s rctm 8747 8249 m 8788 8289 8830 8329 8872 8369 v 
8880 8369 8885 8369 8887 8370 v 8889 8371 8891 8372 8893 8375 v 8895 8377 8895 
8379 8895 8382 v 8895 8386 8894 8389 8891 8392 v 8888 8395 8883 8396 8877 8396 
v 8848 8396 8819 8396 8789 8396 v 8782 8396 8777 8395 8774 8392 v 8771 8389 
8770 8386 8770 8382 v 8770 8378 8771 8375 8774 8373 v 8777 8370 8782 8369 8789 
8369 v 8804 8369 8819 8369 8834 8369 v 8799 8335 8764 8301 8728 8267 v 8693 
8301 8658 8335 8623 8369 v 8637 8369 8652 8369 8667 8369 v 8674 8369 8679 8370 
8681 8373 v 8684 8375 8685 8378 8685 8382 v 8685 8386 8684 8389 8681 8392 v 
8678 8395 8673 8396 8667 8396 v 8638 8396 8608 8396 8578 8396 v 8572 8396 8567 
8395 8564 8392 v 8561 8389 8560 8386 8560 8382 v 8560 8379 8561 8377 8563 8375 
v 8564 8372 8566 8371 8568 8370 v 8570 8369 8575 8369 8584 8369 v 8625 8329 
8667 8289 8709 8248 v 8672 8213 8635 8177 8598 8141 v 8590 8141 8585 8141 8583 
8140 v 8581 8139 8579 8137 8577 8135 v 8575 8133 8575 8130 8575 8127 v 8575 
8123 8576 8121 8579 8118 v 8582 8115 8587 8114 8593 8114 v 8618 8114 8643 8114 
8668 8114 v 8675 8114 8679 8115 8682 8118 v 8685 8121 8686 8124 8686 8128 v 
8686 8132 8685 8135 8682 8137 v 8679 8140 8675 8141 8668 8141 v 8657 8141 8646 
8141 8635 8141 v 8665 8170 8696 8200 8727 8230 v 8757 8201 8788 8171 8819 8141 
v 8809 8141 8798 8141 8787 8141 v 8781 8141 8777 8140 8773 8137 v 8771 8135 
8769 8131 8769 8127 v 8769 8123 8771 8121 8773 8118 v 8777 8115 8781 8114 8788 
8114 v 8813 8114 8838 8114 8863 8114 v 8869 8114 8873 8115 8877 8118 v 8879 
8121 8881 8124 8881 8128 v 8881 8131 8880 8133 8878 8135 v 8877 8137 8875 8139 
8873 8140 v 8871 8141 8865 8141 8858 8141 v 8821 8177 8784 8213 8747 8249 v p 
0.000 0.000 0.000 1.000 k eofill 8975 8536 m 9015 8536 9056 8536 9097 8536 v 
9097 8534 9097 8532 9097 8529 v 9097 8525 9098 8523 9099 8521 v 9101 8520 9102 
8519 9105 8519 v 9107 8519 9109 8520 9110 8521 v 9112 8523 9113 8525 9113 8529 
v 9113 8536 9113 8543 9113 8551 v 9062 8551 9011 8551 8959 8551 v 8959 8544 
8959 8536 8959 8528 v 8992 8499 9023 8469 9054 8439 v 9068 8425 9078 8415 9083 
8408 v 9088 8401 9092 8396 9094 8391 v 9096 8386 9097 8381 9097 8376 v 9097 
8362 9091 8350 9081 8339 v 9069 8329 9056 8324 9041 8324 v 9027 8324 9014 8328 
9004 8336 v 8993 8344 8986 8354 8983 8365 v 8982 8368 8981 8370 8980 8371 v 
8979 8372 8977 8373 8975 8373 v 8973 8373 8971 8372 8969 8371 v 8968 8370 8967 
8368 8967 8366 v 8967 8360 8971 8351 8977 8341 v 8984 8331 8993 8323 9004 8317 
v 9016 8311 9028 8308 9040 8308 v 9060 8308 9077 8315 9091 8328 v 9106 8342 
9113 8358 9113 8375 v 9113 8383 9112 8389 9109 8395 v 9107 8401 9103 8408 9097 
8416 v 9091 8423 9081 8434 9066 8448 v 9029 8485 8999 8514 8975 8534 v 8975 
8534 8975 8535 8975 8536 v p 0.000 0.000 0.000 1.000 k eofill 6524 6001 m 1578 
1660 r 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 0.078740 0.000 
0.000 ] cc s rctm 6699 6064 m -175 -63 r 54 178 r p gs 0.000 0.000 0.000 1.000 
k eofill gr 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 0.078740 
0.000 0.000 ] cc s rctm 7883 8264 m -3595 0 r 0.000 0.000 0.000 1.000 k 
[0.078740 0.000000 0.000000 0.078740 0.000 0.000 ] cc s rctm 4454 8348 m -166 
-84 r 166 -83 r p gs 0.000 0.000 0.000 1.000 k eofill gr 0.000 0.000 0.000 
1.000 k [0.078740 0.000000 0.000000 0.078740 0.000 0.000 ] cc s rctm 3862 7510 
m 1414 -1606 r 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 0.078740 
0.000 0.000 ] cc s rctm 3910 7330 m -48 180 r 173 -70 r p gs 0.000 0.000 0.000 
1.000 k eofill gr 0.000 0.000 0.000 1.000 k [0.078740 0.000000 0.000000 
0.078740 0.000 0.000 ] cc s rctm 3769 6521 m 3826 6490 3883 6458 3941 6426 v 
3944 6424 3947 6423 3948 6423 v 3950 6423 3952 6424 3954 6426 v 3955 6427 3956 
6429 3956 6431 v 3956 6434 3954 6437 3949 6440 v 3900 6467 3851 6494 3802 6521 
v 3851 6548 3900 6576 3949 6604 v 3954 6606 3956 6609 3956 6612 v 3956 6614 
3955 6616 3954 6618 v 3952 6619 3950 6620 3948 6620 v 3947 6620 3944 6619 3941 
6618 v 3884 6586 3827 6554 3769 6521 v p 0.000 0.000 0.000 1.000 k eofill 4187 
6501 m 4129 6501 4071 6501 4013 6501 v 4009 6501 4007 6500 4005 6498 v 4003 
6497 4002 6495 4002 6492 v 4002 6490 4003 6489 4005 6487 v 4007 6485 4009 6485 
4013 6485 v 4071 6485 4129 6485 4187 6485 v 4191 6485 4193 6485 4195 6487 v 
4197 6489 4198 6490 4198 6493 v 4198 6495 4197 6497 4195 6498 v 4193 6500 4191 
6501 4187 6501 v 4187 6501 4187 6501 4187 6501 v p 4187 6558 m 4129 6558 4071 
6558 4013 6558 v 4009 6558 4007 6557 4005 6555 v 4003 6554 4002 6552 4002 6550 
v 4002 6547 4003 6545 4005 6544 v 4007 6543 4009 6542 4013 6542 v 4071 6542 
4129 6542 4187 6542 v 4191 6542 4193 6543 4195 6544 v 4197 6545 4198 6547 4198 
6550 v 4198 6552 4197 6554 4195 6555 v 4193 6557 4191 6558 4187 6558 v 4187 
6558 4187 6558 4187 6558 v p 0.000 0.000 0.000 1.000 k eofill 4363 6566 m 4328 
6566 4293 6566 4257 6566 v 4257 6560 4257 6554 4257 6548 v 4286 6497 4316 6446 
4346 6394 v 4357 6394 4368 6394 4379 6394 v 4379 6446 4379 6498 4379 6550 v 
4383 6550 4387 6550 4392 6550 v 4396 6550 4398 6551 4400 6552 v 4402 6553 4403 
6555 4403 6558 v 4403 6560 4402 6562 4400 6564 v 4398 6565 4396 6566 4392 6566 
v 4388 6566 4384 6566 4379 6566 v 4379 6582 4379 6599 4379 6616 v 4383 6616 
4387 6616 4392 6616 v 4396 6616 4398 6617 4400 6619 v 4402 6620 4403 6622 4403 
6624 v 4403 6626 4402 6628 4400 6630 v 4398 6631 4396 6632 4392 6632 v 4373 
6632 4353 6632 4333 6632 v 4329 6632 4326 6631 4324 6630 v 4323 6628 4322 6626 
4322 6624 v 4322 6622 4323 6620 4324 6619 v 4326 6617 4329 6616 4333 6616 v 
4343 6616 4353 6616 4363 6616 v 4363 6600 4363 6583 4363 6566 v p 4363 6550 m 
4363 6504 4363 6457 4363 6410 v 4361 6410 4358 6410 4355 6410 v 4328 6456 4301 
6503 4274 6550 v 4303 6550 4333 6550 4363 6550 v p 0.000 0.000 0.000 1.000 k 
eofill 7242 6479 m 7299 6447 7356 6415 7414 6383 v 7417 6381 7419 6381 7420 
6381 v 7423 6381 7424 6381 7426 6383 v 7428 6384 7428 6386 7428 6388 v 7428 
6392 7426 6395 7422 6397 v 7373 6424 7324 6451 7274 6479 v 7323 6506 7372 6533 
7422 6561 v 7426 6564 7428 6566 7428 6570 v 7428 6572 7428 6574 7426 6575 v 
7424 6577 7423 6578 7420 6578 v 7419 6578 7417 6577 7414 6575 v 7357 6543 7300 
6511 7242 6479 v p 0.000 0.000 0.000 1.000 k eofill 7660 6458 m 7602 6458 7544 
6458 7485 6458 v 7482 6458 7479 6457 7477 6456 v 7476 6454 7475 6452 7475 6450 
v 7475 6447 7476 6446 7477 6444 v 7479 6443 7482 6442 7485 6442 v 7543 6442 
7601 6442 7660 6442 v 7663 6442 7666 6443 7668 6444 v 7669 6446 7670 6448 7670 
6450 v 7670 6453 7669 6454 7668 6456 v 7666 6457 7663 6458 7660 6458 v 7660 
6458 7660 6458 7660 6458 v p 7660 6515 m 7602 6515 7544 6515 7485 6515 v 7482 
6515 7479 6514 7477 6513 v 7476 6512 7475 6510 7475 6507 v 7475 6505 7476 6503 
7477 6501 v 7479 6500 7482 6499 7485 6499 v 7543 6499 7601 6499 7660 6499 v 
7663 6499 7666 6500 7668 6501 v 7669 6503 7670 6505 7670 6507 v 7670 6510 7669 
6512 7668 6513 v 7666 6514 7663 6515 7660 6515 v 7660 6515 7660 6515 7660 6515 
v p 0.000 0.000 0.000 1.000 k eofill 7887 6468 m 7887 6475 7887 6483 7887 6491 
v 7833 6491 7779 6491 7724 6491 v 7724 6484 7724 6476 7724 6468 v 7778 6468 
7832 6468 7887 6468 v p 0.000 0.000 0.000 1.000 k eofill 8046 6348 m 8046 6423 
8046 6498 8046 6574 v 8064 6574 8082 6574 8101 6574 v 8104 6574 8107 6575 8109 
6576 v 8110 6577 8111 6579 8111 6582 v 8111 6584 8110 6586 8109 6587 v 8107 
6589 8104 6590 8101 6590 v 8059 6590 8017 6590 7975 6590 v 7971 6590 7968 6589 
7967 6587 v 7965 6586 7964 6584 7964 6582 v 7964 6579 7965 6577 7967 6576 v 
7968 6575 7971 6574 7975 6574 v 7993 6574 8011 6574 8030 6574 v 8030 6506 8030 
6438 8030 6370 v 8013 6375 7996 6381 7978 6387 v 7975 6388 7973 6388 7972 6388 
v 7970 6388 7969 6387 7967 6386 v 7966 6384 7965 6382 7965 6380 v 7965 6378 
7965 6376 7967 6375 v 7968 6374 7970 6372 7973 6371 v 7997 6364 8021 6356 8046 
6348 v p 0.000 0.000 0.000 1.000 k eofill 5883 7947 m 5940 7915 5998 7883 6056 
7851 v 6058 7849 6061 7849 6062 7849 v 6064 7849 6066 7849 6068 7851 v 6069 
7853 6070 7854 6070 7856 v 6070 7860 6068 7863 6063 7865 v 6014 7892 5965 7919 
5916 7947 v 5965 7974 6014 8001 6063 8029 v 6068 8032 6070 8034 6070 8038 v 
6070 8040 6069 8042 6068 8043 v 6066 8045 6064 8046 6062 8046 v 6061 8046 6058 
8045 6056 8043 v 5999 8011 5941 7979 5883 7947 v p 0.000 0.000 0.000 1.000 k 
eofill 6247 7928 m 6261 7935 6273 7944 6280 7955 v 6288 7967 6292 7978 6292 
7991 v 6292 8010 6284 8027 6268 8041 v 6253 8056 6234 8064 6211 8064 v 6197 
8064 6183 8061 6168 8055 v 6153 8049 6143 8043 6137 8037 v 6135 8035 6134 8032 
6134 8030 v 6134 8028 6135 8027 6137 8025 v 6138 8024 6140 8023 6142 8023 v 
6144 8023 6146 8024 6148 8026 v 6168 8040 6189 8047 6211 8047 v 6229 8047 6245 
8041 6257 8030 v 6270 8019 6276 8006 6276 7992 v 6276 7982 6273 7973 6267 7964 
v 6261 7955 6252 7948 6240 7942 v 6229 7937 6217 7934 6205 7934 v 6202 7934 
6199 7934 6197 7932 v 6195 7931 6195 7929 6195 7926 v 6195 7924 6195 7922 6197 
7921 v 6199 7919 6201 7919 6204 7919 v 6208 7919 6213 7919 6218 7919 v 6232 
7919 6244 7914 6253 7905 v 6263 7897 6267 7887 6267 7875 v 6267 7863 6262 7853 
6253 7844 v 6243 7835 6230 7830 6214 7830 v 6204 7830 6193 7832 6184 7836 v 
6175 7839 6167 7845 6162 7851 v 6160 7854 6158 7855 6157 7856 v 6156 7856 6155 
7857 6153 7857 v 6151 7857 6150 7856 6148 7854 v 6146 7853 6146 7851 6146 7849 
v 6146 7844 6151 7838 6162 7830 v 6177 7819 6195 7814 6214 7814 v 6235 7814 
6251 7820 6264 7832 v 6277 7844 6283 7859 6283 7875 v 6283 7886 6280 7896 6274 
7906 v 6268 7915 6259 7923 6247 7928 v 6247 7928 6247 7928 6247 7928 v p 0.000 
0.000 0.000 1.000 k eofill 
%%PageTrailer
%%Trailer
end end end 
%%DocumentProcessColors: Black
%%Pages: 1 
%%EOF
